{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "üöÄ Start WhispNote",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "streamlit",
                "run",
                "app.py",
                "--server.port",
                "8506"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new",
                "showReuseMessage": true,
                "clear": false
            },
            "isBackground": true,
            "problemMatcher": [],
            "detail": "Start the main WhispNote Streamlit application"
        },
        {
            "label": "üì¶ Install Dependencies",
            "type": "shell",
            "command": "uv",
            "args": [
                "sync"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install all project dependencies using UV"
        },
        {
            "label": "üß™ Run Tests",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "pytest",
                "-v"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run all tests with verbose output"
        },
        {
            "label": "üß™ Run Tests with Coverage",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "pytest",
                "--cov=.",
                "--cov-report=html",
                "--cov-report=term-missing"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run tests with coverage report"
        },
        {
            "label": "üîç Lint Code",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "ruff",
                "check",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Check code with Ruff linter"
        },
        {
            "label": "üîß Fix Linting Issues",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "ruff",
                "check",
                ".",
                "--fix"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Auto-fix linting issues with Ruff"
        },
        {
            "label": "‚ú® Format Code",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "black",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Format code with Black"
        },
        {
            "label": "üîÑ Format and Lint",
            "dependsOrder": "sequence",
            "dependsOn": [
                "‚ú® Format Code",
                "üîß Fix Linting Issues"
            ],
            "group": "build",
            "detail": "Format code and fix linting issues"
        },
        {
            "label": "üåè Test Swecha API",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "python",
                "test_swecha_api.py"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Test Swecha API integration"
        },
        {
            "label": "üìä Quick Test",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "python",
                "quick_test.py"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run quick functionality test"
        },
        {
            "label": "üßπ Clean Cache",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Get-ChildItem -Path . -Recurse -Directory -Name '__pycache__' | ForEach-Object { Remove-Item -Path $_ -Recurse -Force }; Get-ChildItem -Path . -Recurse -File -Name '*.pyc' | Remove-Item -Force"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Clean Python cache files and directories"
        },
        {
            "label": "üìö Install Test Dependencies",
            "type": "shell",
            "command": "uv",
            "args": [
                "add",
                "--dev",
                "pytest",
                "pytest-cov",
                "black",
                "ruff",
                "mypy"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install development and testing dependencies"
        },
        {
            "label": "üîç Type Check",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "mypy",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run MyPy type checking"
        },
        {
            "label": "üõ†Ô∏è Setup Development Environment",
            "dependsOrder": "sequence",
            "dependsOn": [
                "üì¶ Install Dependencies",
                "üìö Install Test Dependencies"
            ],
            "group": "build",
            "detail": "Complete development environment setup"
        }
    ]
}
